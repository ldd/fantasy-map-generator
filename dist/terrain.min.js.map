{"version":3,"file":"terrain.min.js","sources":["webpack:///webpack/bootstrap 852121f6d6f5ec3b102d","webpack:///src/terrain/step2.js","webpack:///external \"d3\"","webpack:///src/terrain/step3.js","webpack:///src/terrain/step4.js","webpack:///src/terrain/step1.js","webpack:///src/terrain/step6.js","webpack:///src/terrain/step7.js","webpack:///src/visualize/view.js","webpack:///src/main.js","webpack:///src/terrain/step5.js","webpack:///src/terrain/terrain.js","webpack:///src/visualize/visualize.js","webpack:///./~/node-libs-browser/mock/empty.js","webpack:///./~/seedrandom/seedrandom.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 852121f6d6f5ec3b102d","import {defaultExtent, generatePoints, improvePoints, makeMesh} from './step1';\n\nexport function zero(mesh) {\n    var z = [];\n    for (var i = 0; i < mesh.vxs.length; i++) {\n        z[i] = 0;\n    }\n    z.mesh = mesh;\n    return z;\n}\nexport function generateGoodMesh(n, extent) {\n    extent = extent || defaultExtent;\n    var pts = generateGoodPoints(n, extent);\n    return makeMesh(pts, extent);\n}\n\nexport function generateGoodPoints(n, extent) {\n    extent = extent || defaultExtent;\n    var pts = generatePoints(n, extent);\n    pts = pts.sort(function (a, b) {\n        return a[0] - b[0];\n    });\n    return improvePoints(pts, 1, extent);\n}\nexport function slope(mesh, direction) {\n    return mesh.map(function (x) {\n        return x[0] * direction[0] + x[1] * direction[1];\n    });\n}\nexport function runif(lo, hi) {\n    return lo + Math.random() * (hi - lo);\n}\nexport const rnorm = (function () {\n    var z2 = null;\n    function rnorm() {\n        if (z2 != null) {\n            var tmp = z2;\n            z2 = null;\n            return tmp;\n        }\n        var x1 = 0;\n        var x2 = 0;\n        var w = 2.0;\n        while (w >= 1) {\n            x1 = runif(-1, 1);\n            x2 = runif(-1, 1);\n            w = x1 * x1 + x2 * x2;\n        }\n        w = Math.sqrt(-2 * Math.log(w) / w);\n        z2 = x2 * w;\n        return x1 * w;\n    }\n    return rnorm;\n})();\nexport function randomVector(scale) {\n    return [scale * rnorm(), scale * rnorm()];\n}\nexport function add() {\n    var n = arguments[0].length;\n    var newvals = zero(arguments[0].mesh);\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < arguments.length; j++) {\n            newvals[i] += arguments[j][i];\n        }\n    }\n    return newvals;\n}\n\nexport function isnearedge(mesh, i) {\n    var x = mesh.vxs[i][0];\n    var y = mesh.vxs[i][1];\n    var w = mesh.extent.width;\n    var h = mesh.extent.height;\n    return x < -0.45 * w || x > 0.45 * w || y < -0.45 * h || y > 0.45 * h;\n}\n\n\n\n// WEBPACK FOOTER //\n// src/terrain/step2.js","module.exports = d3;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 1\n// module chunks = 0","import {ascending, min, max, quantile as d3quantile} from 'd3-array';\n\nimport {zero, isnearedge} from './step2';\n\nexport function cone(mesh, slope) {\n    return mesh.map(function (x) {\n        return Math.pow(x[0] * x[0] + x[1] * x[1], 0.5) * slope;\n    });\n}\nexport function mountains(mesh, n, r) {\n    r = r || 0.05;\n    var mounts = [];\n    for (var i = 0; i < n; i++) {\n        mounts.push([mesh.extent.width * (Math.random() - 0.5), mesh.extent.height * (Math.random() - 0.5)]);\n    }\n    var newvals = zero(mesh);\n    for (var i = 0; i < mesh.vxs.length; i++) {\n        var p = mesh.vxs[i];\n        for (var j = 0; j < n; j++) {\n            var m = mounts[j];\n            newvals[i] += Math.exp(-((p[0] - m[0]) * (p[0] - m[0]) + (p[1] - m[1]) * (p[1] - m[1])) / (r * r));\n        }\n    }\n    return newvals;\n}\nfunction map(h, f) {\n    var newh = h.map(f);\n    newh.mesh = h.mesh;\n    return newh;\n}\n\nfunction normalize(h) {\n    var lo = min(h);\n    var hi = max(h);\n    return map(h, function (x) {return (x - lo) / (hi - lo)});\n}\nexport function peaky(h) {\n    return map(normalize(h), Math.sqrt);\n}\nexport function neighbours(mesh, i) {\n    var onbs = mesh.adj[i];\n    var nbs = [];\n    for (var i = 0; i < onbs.length; i++) {\n        nbs.push(onbs[i]);\n    }\n    return nbs;\n}\nexport function fillSinks(h, epsilon) {\n    epsilon = epsilon || 1e-5;\n    var infinity = 999999;\n    var newh = zero(h.mesh);\n    for (var i = 0; i < h.length; i++) {\n        if (isnearedge(h.mesh, i)) {\n            newh[i] = h[i];\n        } else {\n            newh[i] = infinity;\n        }\n    }\n    while (true) {\n        var changed = false;\n        for (var i = 0; i < h.length; i++) {\n            if (newh[i] == h[i]) continue;\n            var nbs = neighbours(h.mesh, i);\n            for (var j = 0; j < nbs.length; j++) {\n                if (h[i] >= newh[nbs[j]] + epsilon) {\n                    newh[i] = h[i];\n                    changed = true;\n                    break;\n                }\n                var oh = newh[nbs[j]] + epsilon;\n                if ((newh[i] > oh) && (oh > h[i])) {\n                    newh[i] = oh;\n                    changed = true;\n                }\n            }\n        }\n        if (!changed) return newh;\n    }\n}\n\nfunction quantile(h, q) {\n    var sortedh = [];\n    for (var i = 0; i < h.length; i++) {\n        sortedh[i] = h[i];\n    }\n    sortedh.sort(ascending);\n    return d3quantile(sortedh, q);\n}\nexport function setSeaLevel(h, q) {\n    var newh = zero(h.mesh);\n    var delta = quantile(h, q);\n    for (var i = 0; i < h.length; i++) {\n        newh[i] = h[i] - delta;\n    }\n    return newh;\n}\n\n\n\n// WEBPACK FOOTER //\n// src/terrain/step3.js","import {zero} from './step2';\nimport {neighbours} from './step3';\n\nfunction isedge(mesh, i) {\n    return (mesh.adj[i].length < 3);\n}\nexport function downhill(h) {\n    if (h.downhill) return h.downhill;\n    function downfrom(i) {\n        if (isedge(h.mesh, i)) return -2;\n        var best = -1;\n        var besth = h[i];\n        var nbs = neighbours(h.mesh, i);\n        for (var j = 0; j < nbs.length; j++) {\n            if (h[nbs[j]] < besth) {\n                besth = h[nbs[j]];\n                best = nbs[j];\n            }\n        }\n        return best;\n    }\n    var downs = [];\n    for (var i = 0; i < h.length; i++) {\n        downs[i] = downfrom(i);\n    }\n    h.downhill = downs;\n    return downs;\n}\nexport function getFlux(h) {\n    var dh = downhill(h);\n    var idxs = [];\n    var flux = zero(h.mesh);\n    for (var i = 0; i < h.length; i++) {\n        idxs[i] = i;\n        flux[i] = 1/h.length;\n    }\n    idxs.sort(function (a, b) {\n        return h[b] - h[a];\n    });\n    for (var i = 0; i < h.length; i++) {\n        var j = idxs[i];\n        if (dh[j] >= 0) {\n            flux[dh[j]] += flux[j];\n        }\n    }\n    return flux;\n}\nexport function trislope(h, i) {\n    var nbs = neighbours(h.mesh, i);\n    if (nbs.length != 3) return [0, 0];\n    var p0 = h.mesh.vxs[nbs[0]];\n    var p1 = h.mesh.vxs[nbs[1]];\n    var p2 = h.mesh.vxs[nbs[2]];\n\n    var x1 = p1[0] - p0[0];\n    var x2 = p2[0] - p0[0];\n    var y1 = p1[1] - p0[1];\n    var y2 = p2[1] - p0[1];\n\n    var det = x1 * y2 - x2 * y1;\n    var h1 = h[nbs[1]] - h[nbs[0]];\n    var h2 = h[nbs[2]] - h[nbs[0]];\n\n    return [(y2 * h1 - y1 * h2) / det,\n        (-x2 * h1 + x1 * h2) / det];\n}\nfunction getSlope(h) {\n    var dh = downhill(h);\n    var slope = zero(h.mesh);\n    for (var i = 0; i < h.length; i++) {\n        var s = trislope(h, i);\n        slope[i] = Math.sqrt(s[0] * s[0] + s[1] * s[1]);\n    }\n    return slope;\n}\nexport function erosionRate(h) {\n    var flux = getFlux(h);\n    var slope = getSlope(h);\n    var newh = zero(h.mesh);\n    for (var i = 0; i < h.length; i++) {\n        var river = Math.sqrt(flux[i]) * slope[i];\n        var creep = slope[i] * slope[i];\n        var total = 1000 * river + creep;\n        total = total > 200 ? 200 : total;\n        newh[i] = total;\n    }\n    return newh;\n}\n\n\n\n// WEBPACK FOOTER //\n// src/terrain/step4.js","import {voronoi as d3voronoi} from 'd3-voronoi';\n\nexport const defaultExtent = {width: 1, height: 1};\n\n// code that exposes some functions goes here\nexport function generatePoints(n, extent) {\n    extent = extent || defaultExtent;\n    var pts = [];\n    for (var i = 0; i < n; i++) {\n        pts.push([(Math.random() - 0.5) * extent.width, (Math.random() - 0.5) * extent.height]);\n    }\n    return pts;\n}\nexport function makeMesh(pts, extent) {\n    extent = extent || defaultExtent;\n    var vor = voronoi(pts, extent);\n    var vxs = [];\n    var vxids = {};\n    var adj = [];\n    var edges = [];\n    var tris = [];\n    for (var i = 0; i < vor.edges.length; i++) {\n        var e = vor.edges[i];\n        if (e == undefined) continue;\n        var e0 = vxids[e[0]];\n        var e1 = vxids[e[1]];\n        if (e0 == undefined) {\n            e0 = vxs.length;\n            vxids[e[0]] = e0;\n            vxs.push(e[0]);\n        }\n        if (e1 == undefined) {\n            e1 = vxs.length;\n            vxids[e[1]] = e1;\n            vxs.push(e[1]);\n        }\n        adj[e0] = adj[e0] || [];\n        adj[e0].push(e1);\n        adj[e1] = adj[e1] || [];\n        adj[e1].push(e0);\n        edges.push([e0, e1, e.left, e.right]);\n        tris[e0] = tris[e0] || [];\n        if (!tris[e0].includes(e.left)) tris[e0].push(e.left);\n        if (e.right && !tris[e0].includes(e.right)) tris[e0].push(e.right);\n        tris[e1] = tris[e1] || [];\n        if (!tris[e1].includes(e.left)) tris[e1].push(e.left);\n        if (e.right && !tris[e1].includes(e.right)) tris[e1].push(e.right);\n    }\n    var mesh = {\n        pts: pts,\n        vor: vor,\n        vxs: vxs,\n        adj: adj,\n        tris: tris,\n        edges: edges,\n        extent: extent\n    };\n    mesh.map = function (f) {\n        var mapped = vxs.map(f);\n        mapped.mesh = mesh;\n        return mapped;\n    };\n    return mesh;\n}\n\nfunction voronoi(pts, extent) {\n    extent = extent || defaultExtent;\n    var w = extent.width/2;\n    var h = extent.height/2;\n    return d3voronoi().extent([[-w, -h], [w, h]])(pts);\n}\nfunction centroid(pts) {\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < pts.length; i++) {\n        x += pts[i][0];\n        y += pts[i][1];\n    }\n    return [x/pts.length, y/pts.length];\n}\n\nexport function improvePoints(pts, n, extent) {\n    n = n || 1;\n    extent = extent || defaultExtent;\n    for (var i = 0; i < n; i++) {\n        pts = voronoi(pts, extent)\n            .polygons(pts)\n            .map(centroid);\n    }\n    return pts;\n}\n\n\n\n// WEBPACK FOOTER //\n// src/terrain/step1.js","import {isnearedge} from './step2';\nimport {downhill, getFlux} from './step4';\n\nexport function mergeSegments(segs) {\n    var adj = {};\n    for (var i = 0; i < segs.length; i++) {\n        var seg = segs[i];\n        var a0 = adj[seg[0]] || [];\n        var a1 = adj[seg[1]] || [];\n        a0.push(seg[1]);\n        a1.push(seg[0]);\n        adj[seg[0]] = a0;\n        adj[seg[1]] = a1;\n    }\n    var done = [];\n    var paths = [];\n    var path = null;\n    while (true) {\n        if (path == null) {\n            for (var i = 0; i < segs.length; i++) {\n                if (done[i]) continue;\n                done[i] = true;\n                path = [segs[i][0], segs[i][1]];\n                break;\n            }\n            if (path == null) break;\n        }\n        var changed = false;\n        for (var i = 0; i < segs.length; i++) {\n            if (done[i]) continue;\n            if (adj[path[0]].length == 2 && segs[i][0] == path[0]) {\n                path.unshift(segs[i][1]);\n            } else if (adj[path[0]].length == 2 && segs[i][1] == path[0]) {\n                path.unshift(segs[i][0]);\n            } else if (adj[path[path.length - 1]].length == 2 && segs[i][0] == path[path.length - 1]) {\n                path.push(segs[i][1]);\n            } else if (adj[path[path.length - 1]].length == 2 && segs[i][1] == path[path.length - 1]) {\n                path.push(segs[i][0]);\n            } else {\n                continue;\n            }\n            done[i] = true;\n            changed = true;\n            break;\n        }\n        if (!changed) {\n            paths.push(path);\n            path = null;\n        }\n    }\n    return paths;\n}\n\nfunction relaxPath(path) {\n    var newpath = [path[0]];\n    for (var i = 1; i < path.length - 1; i++) {\n        var newpt = [0.25 * path[i-1][0] + 0.5 * path[i][0] + 0.25 * path[i+1][0],\n            0.25 * path[i-1][1] + 0.5 * path[i][1] + 0.25 * path[i+1][1]];\n        newpath.push(newpt);\n    }\n    newpath.push(path[path.length - 1]);\n    return newpath;\n}\nexport function getRivers(h, limit) {\n    var dh = downhill(h);\n    var flux = getFlux(h);\n    var links = [];\n    var above = 0;\n    for (var i = 0; i < h.length; i++) {\n        if (h[i] > 0) above++;\n    }\n    limit *= above / h.length;\n    for (var i = 0; i < dh.length; i++) {\n        if (isnearedge(h.mesh, i)) continue;\n        if (flux[i] > limit && h[i] > 0 && dh[i] >= 0) {\n            var up = h.mesh.vxs[i];\n            var down = h.mesh.vxs[dh[i]];\n            if (h[dh[i]] > 0) {\n                links.push([up, down]);\n            } else {\n                links.push([up, [(up[0] + down[0])/2, (up[1] + down[1])/2]]);\n            }\n        }\n    }\n    return mergeSegments(links).map(relaxPath);\n}\n\n\n\n// WEBPACK FOOTER //\n// src/terrain/step6.js","import {isnearedge} from './step2';\nimport {mergeSegments} from './step6';\n\nexport function contour(h, level) {\n    level = level || 0;\n    var edges = [];\n    for (var i = 0; i < h.mesh.edges.length; i++) {\n        var e = h.mesh.edges[i];\n        if (e[3] == undefined) continue;\n        if (isnearedge(h.mesh, e[0]) || isnearedge(h.mesh, e[1])) continue;\n        if ((h[e[0]] > level && h[e[1]] <= level) ||\n            (h[e[1]] > level && h[e[0]] <= level)) {\n            edges.push([e[2], e[3]]);\n        }\n    }\n    return mergeSegments(edges);\n}\n\n\n\n// WEBPACK FOOTER //\n// src/terrain/step7.js","import {min, max} from 'd3-array';\nimport {path as d3Path, select} from 'd3';\n\nimport {add, generateGoodMesh, isnearedge, randomVector, runif, slope, rnorm} from '../terrain/step2';\nimport {cone, fillSinks, mountains, neighbours, peaky, setSeaLevel} from '../terrain/step3';\nimport {trislope} from '../terrain/step4';\nimport {contour} from '../terrain/step7';\n\n// api.showImprovedPoints = function(){\n//     api.meshPts = api.generatePoints(512);\n//     // api.meshVxs = makeMesh(meshPts).vxs;\n//     api.meshPts = api.improvePoints(api.meshPts);\n//     visualizePoints(select('#mesh'), api.meshPts)\n// };\n\n// const addRandomSlope = (terrain, points) => {\n//     points = terrain.add(points, terrain.slope(points.mesh, terrain.randomVector(4)));\n//     terrain.visualizeVoronoi(select('#mesh'), points, -1, 1);\n//     terrain.drawPaths(select('#mesh'), 'coast', terrain.contour(points, 0));\n// };\n\nfunction generateUneroded() {\n    var mesh = generateGoodMesh(4096);\n    var h = add(slope(mesh, randomVector(4)),\n        cone(mesh, runif(-1, 1)),\n        mountains(mesh, 50));\n    h = peaky(h);\n    h = fillSinks(h);\n    h = setSeaLevel(h, 0.5);\n    return h;\n}\n\nexport function drawErode() {\n    var points = generateUneroded();\n    // visualizeVoronoi(erodeSVG, erosionRate(erodeH));\n    visualizeVoronoi(select('#mesh'), points, 0, 1);\n    drawPaths(select('#mesh'), 'coast', contour(points, 0));\n}\n\nexport function visualizeSlopes(svg, render) {\n    var h = render.h;\n    var strokes = [];\n    var r = 0.25 / Math.sqrt(h.length);\n    for (var i = 0; i < h.length; i++) {\n        if (h[i] <= 0 || isnearedge(h.mesh, i)) continue;\n        var nbs = neighbours(h.mesh, i);\n        nbs.push(i);\n        var s = 0;\n        var s2 = 0;\n        for (var j = 0; j < nbs.length; j++) {\n            var slopes = trislope(h, nbs[j]);\n            s += slopes[0] / 10;\n            s2 += slopes[1];\n        }\n        s /= nbs.length;\n        s2 /= nbs.length;\n        if (Math.abs(s) < runif(0.1, 0.4)) continue;\n        var l = r * runif(1, 2) * (1 - 0.2 * Math.pow(Math.atan(s), 2)) * Math.exp(s2/100);\n        var x = h.mesh.vxs[i][0];\n        var y = h.mesh.vxs[i][1];\n        if (Math.abs(l*s) > 2 * r) {\n            var n = Math.floor(Math.abs(l*s/r));\n            l /= n;\n            if (n > 4) n = 4;\n            for (var k = 0; k < n; k++) {\n                var u = rnorm() * r;\n                var v = rnorm() * r;\n                strokes.push([[x+u-l, y+v+l*s], [x+u+l, y+v-l*s]]);\n            }\n        } else {\n            strokes.push([[x-l, y+l*s], [x+l, y-l*s]]);\n        }\n    }\n    var lines = svg.selectAll('line.slope').data(strokes);\n    lines.enter()\n        .append('line')\n        .classed('slope', true);\n    lines.exit()\n        .remove();\n    svg.selectAll('line.slope')\n        .attr('x1', function (d) { return 1000*d[0][0] })\n        .attr('y1', function (d) { return 1000*d[0][1] })\n        .attr('x2', function (d) { return 1000*d[1][0] })\n        .attr('y2', function (d) { return 1000*d[1][1] })\n}\n\nfunction makeD3Path (path) {\n    var p = d3Path();\n    p.moveTo(1000*path[0][0], 1000*path[0][1]);\n    for (var i = 1; i < path.length; i++) {\n        p.lineTo(1000*path[i][0], 1000*path[i][1]);\n    }\n    return p.toString();\n}\n\nexport function visualizeVoronoi(svg, field, lo, hi, colorFn) {\n    if (hi === undefined) hi = max(field) + 1e-9;\n    if (lo === undefined) lo = min(field) - 1e-9;\n    var mappedvals = field.map(function (x) { return x > hi ? 1 : x < lo ? 0 : (x - lo) / (hi - lo) });\n    var tris = svg.selectAll('path.field').data(field.mesh.tris);\n    tris.enter()\n        .append('path')\n        .classed('field', true);\n\n    tris.exit()\n        .remove();\n\n    svg.selectAll('path.field')\n        .attr('d', makeD3Path)\n        .style('fill-opacity', '0.85')\n        .style('fill', function (_, i) {\n            return colorFn(mappedvals[i]);\n        })\n    ;\n}\n\nexport function drawPaths(svg, cls, paths) {\n    var svgPaths = svg.selectAll('path.' + cls).data(paths);\n    svgPaths.enter()\n        .append('path')\n        .classed(cls, true);\n    svgPaths.exit()\n        .remove();\n    svg.selectAll('path.' + cls)\n        .attr('d', makeD3Path);\n}\n\n\n\n// WEBPACK FOOTER //\n// src/visualize/view.js","export {drawPaths} from './visualize/view';\nexport {drawMap, colorMap} from './visualize/visualize';\nexport {generateMap} from './terrain/terrain';\n\n\n\n// WEBPACK FOOTER //\n// src/main.js","import {zero, generateGoodMesh, add, slope, randomVector, runif} from './step2';\nimport {neighbours, cone, mountains, peaky, setSeaLevel, fillSinks} from './step3';\nimport {erosionRate} from './step4';\nimport {mean, max} from 'd3-array';\n\nexport function cleanCoast(h, iters) {\n    for (var iter = 0; iter < iters; iter++) {\n        var changed = 0;\n        var newh = zero(h.mesh);\n        for (var i = 0; i < h.length; i++) {\n            newh[i] = h[i];\n            var nbs = neighbours(h.mesh, i);\n            if (h[i] <= 0 || nbs.length != 3) continue;\n            var count = 0;\n            var best = -999999;\n            for (var j = 0; j < nbs.length; j++) {\n                if (h[nbs[j]] > 0) {\n                    count++;\n                } else if (h[nbs[j]] > best) {\n                    best = h[nbs[j]];\n                }\n            }\n            if (count > 1) continue;\n            newh[i] = best / 2;\n            changed++;\n        }\n        h = newh;\n        newh = zero(h.mesh);\n        for (var i = 0; i < h.length; i++) {\n            newh[i] = h[i];\n            var nbs = neighbours(h.mesh, i);\n            if (h[i] > 0 || nbs.length != 3) continue;\n            var count = 0;\n            var best = 999999;\n            for (var j = 0; j < nbs.length; j++) {\n                if (h[nbs[j]] <= 0) {\n                    count++;\n                } else if (h[nbs[j]] < best) {\n                    best = h[nbs[j]];\n                }\n            }\n            if (count > 1) continue;\n            newh[i] = best / 2;\n            changed++;\n        }\n        h = newh;\n    }\n    return h;\n}\nfunction relax(h) {\n    var newh = zero(h.mesh);\n    var innerFunction = function (j) {return h[j]};\n    for (var i = 0; i < h.length; i++) {\n        var nbs = neighbours(h.mesh, i);\n        if (nbs.length < 3) {\n            newh[i] = 0;\n            continue;\n        }\n        newh[i] = mean(nbs.map(innerFunction));\n    }\n    return newh;\n}\nfunction erode(h, amount) {\n    var er = erosionRate(h);\n    var newh = zero(h.mesh);\n    var maxr = max(er);\n    for (var i = 0; i < h.length; i++) {\n        newh[i] = h[i] - amount * (er[i] / maxr);\n    }\n    return newh;\n}\nexport function doErosion(h, amount, n) {\n    n = n || 1;\n    h = fillSinks(h);\n    for (var i = 0; i < n; i++) {\n        h = erode(h, amount);\n        h = fillSinks(h);\n    }\n    return h;\n}\nexport function generateCoast(params) {\n    var mesh = generateGoodMesh(params.npts, params.extent);\n    var h = add(\n        slope(mesh, randomVector(4)),\n        cone(mesh, runif(-1, -1)),\n        mountains(mesh, 50)\n    );\n    for (var i = 0; i < 10; i++) {\n        h = relax(h);\n    }\n    h = peaky(h);\n    h = doErosion(h, runif(0, 0.1), 5);\n    h = setSeaLevel(h, runif(0.2, 0.6));\n    h = fillSinks(h);\n    h = cleanCoast(h, 3);\n    return h;\n}\n\n\n\n// WEBPACK FOOTER //\n// src/terrain/step5.js","import seedrandom from 'seedrandom/seedrandom';\nimport {defaultExtent} from './step1';\nimport {generateCoast, doErosion, cleanCoast} from './step5';\nimport {getRivers} from './step6';\nimport {contour} from './step7';\nimport {setSeaLevel, fillSinks} from './step3';\n\nfunction seed(seedString, isUsingSeed){\n    seedrandom(seedString, {\n        global: isUsingSeed\n    });\n}\n\nexport function generateMap(n, seedString, isUsingSeed){\n    n = n || Math.pow(2, 10);\n    seedString = seedString || 'map';\n   seed(seedString, isUsingSeed);\n\n   var points = generateCoast({npts: n, extent: defaultExtent});\n   return {\n       points: points,\n       coast: contour(points, 0),\n       rivers: getRivers(points, 0.03),\n       mesh: points.mesh\n   };\n}\n\nfunction setDefault(value, defaultValue){\n    if(value === undefined || value === null){\n        return defaultValue;\n    }\n    else{\n        return value;\n    }\n}\n\nexport function erodeMap(originalPoints, erosionRate, seaRate, coastRate){\n    erosionRate = setDefault(erosionRate, 0.1);\n    seaRate = setDefault(seaRate, 0.5);\n    coastRate = setDefault(coastRate, 1);\n\n    var points = doErosion(originalPoints, erosionRate);\n    points= setSeaLevel(points, seaRate);\n    points= cleanCoast(points, coastRate);\n    points= fillSinks(points);\n\n    var coast = contour(points, 0);\n    var rivers = getRivers(points, 0.01);\n    return {\n        points: points,\n        coast: coast,\n        rivers: rivers,\n        mesh: points.mesh\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// src/terrain/terrain.js","import {visualizeVoronoi, drawPaths, visualizeSlopes} from './view';\nimport {scaleLinear} from 'd3';\n\nfunction colorFn(value){\n    if(value === 0){\n        return '#1E3167';\n    }\n    else{\n        return scaleLinear()\n            .range(['#d79d56', '#ca852f'])(value);\n    }\n}\n\nexport function drawMap(canvas, points, coast, rivers){\n    drawPaths(canvas, 'coast', coast);\n    drawPaths(canvas, 'river', rivers);\n    visualizeSlopes(canvas, {h: points});\n}\n\nexport function colorMap(canvas, points, pColorFn){\n    visualizeVoronoi(canvas, points, 0, undefined, pColorFn || colorFn);\n}\n\n\n\n// WEBPACK FOOTER //\n// src/visualize/visualize.js","\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/node-libs-browser/mock/empty.js\n// module id = 12\n// module chunks = 0","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\n    var out = new Uint8Array(width);\n    (global.crypto || global.msCrypto).getRandomValues(out);\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/seedrandom.js\n// module id = 13\n// module chunks = 0"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACrFA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpsourceRoot":""}