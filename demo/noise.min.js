/**
 * @license
 * A speed-improved perlin and simplex noise algorithms for 2D.
 *
 * Based on example code by Stefan Gustavson (stegu@itn.liu.se).
 * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).
 * Better rank ordering method by Stefan Gustavson in 2012.
 * Converted to Javascript by Joseph Gentle.
 *
 * Version 2012-03-09
 *
 * This code was placed in the public domain by its original author,
 * Stefan Gustavson. You may use it as you see fit, but
 * attribution is appreciated.
 *
 **/
var noise=function(t){function n(t,n,r){this.x=t,this.y=n,this.z=r}function r(t){return t*t*t*(t*(6*t-15)+10)}function o(t,n,r){return(1-r)*t+r*n}n.prototype.dot2=function(t,n){return this.x*t+this.y*n},n.prototype.dot3=function(t,n,r){return this.x*t+this.y*n+this.z*r};var e=[new n(1,1,0),new n(-1,1,0),new n(1,-1,0),new n(-1,-1,0),new n(1,0,1),new n(-1,0,1),new n(1,0,-1),new n(-1,0,-1),new n(0,1,1),new n(0,-1,1),new n(0,1,-1),new n(0,-1,-1)],a=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],i=new Array(512),u=new Array(512);t.seed=function(t){t>0&&t<1&&(t*=65536),t=Math.floor(t),t<256&&(t|=t<<8);for(var n=0;n<256;n++){var r;r=1&n?a[n]^255&t:a[n]^t>>8&255,i[n]=i[n+256]=r,u[n]=u[n+256]=e[r%12]}},t.seed(0);var f=.5*(Math.sqrt(3)-1),h=(3-Math.sqrt(3))/6;return t.simplex2=function(t,n){var r,o,e,a,s,w=(t+n)*f,v=Math.floor(t+w),d=Math.floor(n+w),c=(v+d)*h,l=t-v+c,y=n-d+c;l>y?(a=1,s=0):(a=0,s=1);var M=l-a+h,p=y-s+h,x=l-1+2*h,q=y-1+2*h;v&=255,d&=255;var z=u[v+i[d]],A=u[v+a+i[d+s]],m=u[v+1+i[d+1]],b=.5-l*l-y*y;b<0?r=0:(b*=b,r=b*b*z.dot2(l,y));var g=.5-M*M-p*p;g<0?o=0:(g*=g,o=g*g*A.dot2(M,p));var j=.5-x*x-q*q;return j<0?e=0:(j*=j,e=j*j*m.dot2(x,q)),70*(r+o+e)},t.perlin2=function(t,n){var e=Math.floor(t),a=Math.floor(n);t-=e,n-=a,e&=255,a&=255;var f=u[e+i[a]].dot2(t,n),h=u[e+i[a+1]].dot2(t,n-1),s=u[e+1+i[a]].dot2(t-1,n),w=u[e+1+i[a+1]].dot2(t-1,n-1),v=r(t);return o(o(f,s,v),o(h,w,v),r(n))},t}(noise||{});
